name: "Code Scanning - Action"

on:
  workflow_dispatch:
# trivyのDBダウンロードでTOOMANYREQUESTSが出ている
# 解決方法がわかるまでワークフローを無効化する
#  push:
#    branches: [ master, develop ]
#  pull_request:
#    branches: [ master, develop ]
#  schedule:
#    #        ┌───────────── minute (0 - 59)
#    #        │  ┌───────────── hour (0 - 23)
#    #        │  │ ┌───────────── day of the month (1 - 31)
#    #        │  │ │ ┌───────────── month (1 - 12 or JAN-DEC)
#    #        │  │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
#    #        │  │ │ │ │
#    #        │  │ │ │ │
#    #        │  │ │ │ │
#    #        *  * * * *
#    - cron: "30 1 * * 0"

jobs:
  CodeQL-Build:
    # CodeQL runs on ubuntu-latest, windows-latest, and macos-latest
    runs-on: ubuntu-latest

    permissions:
      # required for all workflows
      security-events: write

      # only required for workflows in private repositories
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        # Override language selection by uncommenting this and choosing your languages
        # with:
        #   languages: go, javascript, csharp, python, cpp, java, ruby

      # Autobuild attempts to build any compiled languages (C/C++, C#, Go, or Java).
      # If this step fails, then you should remove it and run the build manually (see below).
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      # ℹ️ Command-line programs to run using the OS shell.
      # 📚 See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

      # ✏️ If the Autobuild fails above, remove it and uncomment the following
      #    three lines and modify them (or add more) to build your code if your
      #    project uses a compiled language

      #- run: |
      #     make bootstrap
      #     make release

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  Trivy-Scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm

      - name: Build an image from Dockerfile
        run: |
          npm ci
          cd ./packages/backend-app
          npm run build:match-make
          docker build -t gbraver-burst/backend-app:${{ github.sha }} -f matchMake.Dockerfile .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "gbraver-burst/backend-app:${{ github.sha }}"
          format: "sarif"
          output: "trivy-results.sarif"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"
